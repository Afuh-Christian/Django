............Altering the Authentication name in headers..........................


import json
import requests
from getpass import getpass

auth_endpoint = "http://127.0.0.1:8000/api/auth/" 

username = input("What is your username: ")
password = getpass("What is your password: ")

auth_response = requests.post(auth_endpoint,json = {'username':username ,
 'password': password}) 



##########################################################################
if auth_response.status_code == 200:
    token = auth_response.json()['token']
    headers = {
        "Authorization": f"Token {token}"
    }
    endpoint = "http://127.0.0.1:8000/api/products/" 


    output_response = requests.get(endpoint,headers=headers) 

    print(output_response.json())



#***********************************************************************************
NB to alter the Authorization name in headers from Token to eg Bearer
#***********************************************************************************

    headers = {
        "Authorization": f"Bearer {token}"
    }

################
1....
api
authentication.py
from rest_framework.authentication import TokenAuthentication as B

class TokenAuthentication(B):
    keyword = "Bearer" 

#We have overritten the TokenAuthentication class

################

2....
products
views.py

#....................................................................................
from api.authentication import TokenAuthentication
#....................................................................................


class ProductListCreateAPIView(generics.ListCreateAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer
    authentication_classes = [
        authentication.SessionAuthentication,
#....................................................................................
       TokenAuthentication
#....................................................................................
        ]
    permission_classes = [permissions.IsAdminUser, IsStaffEditorPermission]

    def perform_create(self, serializer):
        #serializer.save(user= self.request.user)
        print(serializer.validated_data)
        title = serializer.validated_data.get('title')
        content = serializer.validated_data.get('content') 
        
        if content is None:
            content = title
        serializer.save(content=content)

product_list_create_view = ProductListCreateAPIView.as_view()
