
#################################################################################################
models.py

from django.db import models

# Create your models here.
class Product(models.Model):
    title = models.CharField(max_length=120) 
    content = models.TextField(blank=True,null=True) 
    price = models.DecimalField(max_digits=15,decimal_places=2,default=99.99) 

    @property
    def sale_price(self):
        return "%.2f" %(float(self.price) * 0.8 )

#################################################################################################
python manage.py shell 

>>>from products.models import Product
>>>Product.objects.first().sale_price
this will alter the first price created.........
>>>Product.objects.last().sale_price
this will alter the last price created.........
We can do this for other instances 

#################################################################################################
View.py
from django.forms.models import model_to_dict

from rest_framework.response import Response
from rest_framework.decorators import api_view

import json
from products.models import Product

@api_view(["GET","POST"])
def api_home(request, *args, **kwargs):
    model_data = Product.objects.all().order_by("?").first()
    data = {} 
    if model_data:
        data = model_to_dict(model_data,fields = ['id','title','price','sale_price'])
    return Response(data)


#################################################################################################
ERROR   ......... the "sale_price" cannot be displayed on the client side 
			this is why we need rest framework and serializers
