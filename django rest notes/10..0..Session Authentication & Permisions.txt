2:16:32
Use documentations for more info


Session Authentication and Permisions


1.. login a user in
2.. Setting restrictions

views.py
#..................................................................................
from rest_framework import generics , mixins , permissions
#..................................................................................



class ProductListCreateAPIView(generics.ListCreateAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer
#..................................................................................
    permission_classes = [permissions.IsAuthenticated]
#..................................................................................

    def perform_create(self, serializer):
        #serializer.save(user= self.request.user)
        print(serializer.validated_data)
        title = serializer.validated_data.get('title')
        content = serializer.validated_data.get('content') 
        
        if content is None:
            content = title
        serializer.save(content=content)

product_list_create_view = ProductListCreateAPIView.as_view()

#####Console of client site...............####################################
{'detail': 'Authentication credentials were not provided.'}
###########################################################################

NB
 1.... permission_classes = [permissions.IsAuthenticatedOrReadOnly]
		Only GET method will be allowed
 2....Can also be used for GenericAPIView

 3..They are also available for function based views



To create a backend user

views.py
#..................................................................................
from rest_framework import generics , mixins , permissions ,authentication
#..................................................................................

class ProductListCreateAPIView(generics.ListCreateAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer
#..................................................................................
    authentication_classes = [authentication.SessionAuthentication]
#..................................................................................
    permission_classes = [permissions.IsAuthenticatedOrReadOnly]


    def perform_create(self, serializer):
        #serializer.save(user= self.request.user)
        print(serializer.validated_data)
        title = serializer.validated_data.get('title')
        content = serializer.validated_data.get('content') 
        
        if content is None:
            content = title
        serializer.save(content=content)

product_list_create_view = ProductListCreateAPIView.as_view()

1..python manage.py createsuperuser

.............................................................................................

1...It works only for a standard django project
2...Javascript can now use the session cookies to actually interact with the data

2...At this point the client.py can't work with loging in a user 
We'll need to use selenuim for this

# http://localhost:8000/admin/ 
# session -> post data 
# selenium 


............................We want to ................................
-create custom authentication
-token authentication so that our python client.py will be able to work with the api as well
