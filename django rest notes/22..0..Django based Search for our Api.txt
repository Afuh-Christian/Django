4:35:00

##########################################################################################
products
models.py

WE want to be able to search public records

##......................................................................................
from django.db.models import Q

class ProductQueryset(models.QuerySet):
    def is_public(self):
        return self.filter(public=True)

    def search(self, query, user=None):
        lookup = Q(title__icontains=query) | Q(content__icontains = query)
        qs = self.is_public().filter(lookup)
        if user is not None:
            qs2 = self.filter(user=user).filter(lookup)
            qs = (qs | qs2).distinct()
        return qs

class ProductManager(models.Manager):
    def get_queryset(self, *args, **kwargs):
        return ProductQueryset(self.model, using=self._db)

    def search(self, query, user=None):
        return self.get_queryset().search(query,user=user)
##......................................................................................

class Product(models.Model):
    user = models.ForeignKey(User , default=1 , null=True , on_delete=models.SET_NULL)
    title = models.CharField(max_length=120) 
    content = models.TextField(blank=True,null=True) 
    price = models.DecimalField(max_digits=15,decimal_places=2,default=99.99) 
##......................................................................................
    public = models.BooleanField(default=True)
##......................................................................................
    objects = ProductManager()
##......................................................................................


    @property
    def sale_price(self):
        return "%.2f" %(float(self.price) * 0.8 )

    def get_discount(self):
        return "122"

##########################################################################################
create a search app

python manage.py startapp  search 

####################################################################
search
views.py
from django.shortcuts import render

# Create your views here.

from rest_framework import generics 
from products.models import Product
from products.serializers import ProductSerializer

class SearcListView(generics.ListAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer

    def get_queryset(self,*args,**kwargs):
        qs = super().get_queryset(*args, **kwargs)
        q = self.request.GET.get('q')
        results = Product.objects.none()
        if q is not None:
            user = None 
            if self.request.user.is_authenticated:
                user = self.request.user
            results = qs.search(q, user=user)
        return results
####################################################################
search
urls.py

    path('',SearcListView.as_view(), name = 'search')



#############################################
cfehome

  path('api/search/',include('search.urls')),


#############################################
To search type and append 

?q={item to seach} 