To simplify our code , we need to leaverage the rest_framework  settings due to 
	-Authentication classes 
	-Permission class
We want to sets some defualts there so that no matter what our views.py , it goes off of those 
defaults 


settings .py

REST_FRAMEWORK = {

    #authentication_class
    'DEFAULT_AUTHENTICATION_CLASSES': [  #from what we had in the views.py .... What we have here is now the default for all our views to be
        "rest_framework.authentication.SessionAuthentication",  #we are setting a path to it so we don't have to copy it again
        "api.authentication.TokenAuthentication"
    ],
    #permission_class
    'DEFAULT_PERMISSION_CLASSES' : [# for this case what we'll have here won't be thesame with we have in the ListApiView in the views.py
        "rest_framework.permissions.IsAuthenticatedOrReadOnly" #Allows only GET
    ],

}

#############################################################################

Now we don't need the authentication classes in views , only the permission


views.py


class ProductListCreateAPIView(generics.ListCreateAPIView):
    queryset = Product.objects.all()
#................................................................
    serializer_class = ProductSerializer
    # authentication_classes = [
    #     authentication.SessionAuthentication,
    #    TokenAuthentication
    #     ]
#................................................................
    permission_classes = [permissions.IsAdminUser, IsStaffEditorPermission]

    def perform_create(self, serializer):
        #serializer.save(user= self.request.user)
        print(serializer.validated_data)
        title = serializer.validated_data.get('title')
        content = serializer.validated_data.get('content') 
        
        if content is None:
            content = title
        serializer.save(content=content)

product_list_create_view = ProductListCreateAPIView.as_view()

###########################
if we want all authenticated users to have access to the \
  - comment out permission_classes in views.py
############################


Now we should now copy and paste the permission_classes on the other views


# listAPIView 

class ProductListAPIView(generics.ListAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer    
#................................................................
    permission_classes = [permissions.IsAdminUser, IsStaffEditorPermission]
#................................................................

product_list_view = ProductListAPIView.as_view()


#update and  ... cbv 

class ProductUpdateAPIView(generics.UpdateAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer
    lookup_field = 'pk'
#................................................................
    permission_classes = [permissions.IsAdminUser, IsStaffEditorPermission]
#................................................................

    def perform_update(self, serializer):
        instance = serializer.save()
        if not instance.content:
            instance.content = instance.title
            ##

product_update_view = ProductUpdateAPIView.as_view()

#delete..

class ProductDestroyAPIView(generics.DestroyAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer
    lookup_field = 'pk'
#................................................................
    permission_classes = [permissions.IsAdminUser, IsStaffEditorPermission]
#................................................................

    def perform_destroy(self, instance):
        super().perform_destroy(instance)


product_destroy_view = ProductDestroyAPIView.as_view()





















##################


#############################
During production 
##############################################################################################
settings.py

NB DEGUB = False ....during production


We do this to check the configuration from time to time
auth_classes = [
    "rest_framework.authentication.SessionAuthentication", 
        "api.authentication.TokenAuthentication"
]
if DEBUG:
    auth_classes = [
         "api.authentication.TokenAuthentication"
    ]
##############################################################################################